service: () -> {
    addGym: (record {gymName:text; gymLocation:text; gymImgUrl:text}) -> (variant {Ok:record {id:text; gymName:text; members:vec text; owner:principal; gymLocation:text; gymServices:vec record {id:text; serviceName:text; serviceDescription:text}; gymImgUrl:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    deleteGym: (text) -> (variant {Ok:text; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    getAddressFromPrincipal: (principal) -> (text) query;
    getAllGym: () -> (vec record {id:text; gymName:text; members:vec text; owner:principal; gymLocation:text; gymServices:vec record {id:text; serviceName:text; serviceDescription:text}; gymImgUrl:text}) query;
    getGymById: (text) -> (variant {Ok:record {id:text; gymName:text; members:vec text; owner:principal; gymLocation:text; gymServices:vec record {id:text; serviceName:text; serviceDescription:text}; gymImgUrl:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    makePayment: (text, nat64) -> (variant {Ok:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateGym: (record {id:text; gymName:text; members:vec text; owner:principal; gymLocation:text; gymServices:vec record {id:text; serviceName:text; serviceDescription:text}; gymImgUrl:text}) -> (variant {Ok:record {id:text; gymName:text; members:vec text; owner:principal; gymLocation:text; gymServices:vec record {id:text; serviceName:text; serviceDescription:text}; gymImgUrl:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    verifyPayment: (principal, nat64, nat64, nat64) -> (bool) query;
}
